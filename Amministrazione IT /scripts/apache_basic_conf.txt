ServerRoot "/etc/httpd" 1 Listen 80 2
Include conf.modules.d/*.conf 3 User apache 4
Group apache 5
ServerAdmin root@localhost 6 <Directory /var/www/html> 7
    AllowOverride none
    Require all denied
/
 </Directory>
DocumentRoot "/var/www/html" 8 <Directory "/var/www">
    AllowOverride None
    Require all granted
</Directory>
<Directory "/var/www/html"> Options Indexes FollowSymLinks AllowOverride None
Require all granted
</Directory>
<IfModule dir_module> 9
DirectoryIndex index.html </IfModule>
<Files ".ht*"> 10 Require all denied
</Files>
ErrorLog "logs/error_log" 11 LogLevel warn
<IfModule log_config_module>
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
/

 LogFormat "%h %l %u %t \"%r\" %>s %b" common <IfModule logio_module>
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
</IfModule>
CustomLog "logs/access_log" combined 12
</IfModule>
AddDefaultCharset UTF-8 13 IncludeOptional conf.d/*.conf 14
1 This directive specifies where httpd will look for any files referenced in the configuration files with a relative path name.
2 This directive tells httpd to start listening on port 80/TCP on all interfaces. To only listen on select interfaces, the syntax “Listen 1.2.3.4:80” can be used for IPv4 or “Listen [2001:db8::1]:80” for IPv6.
Note: Multiple listen directives are allowed, but overlapping listen directives will result in a fatal error, preventing httpd from starting.
3 This directive includes other files, as if they were inserted into the configuration file in place of the Include statement. When multiple files are specified, they will be sorted by filename in alphanumeric order before being included. Filenames can either be absolute, or relative to ServerRoot, and include wildcards such as *.
Note: Specifying a non existent file will result in a fatal error, preventing httpd from starting.
/

 4 5 These two directives specify the user and group the httpd daemon should run as. httpd is always started as root, but once all actions that need root privileges have been performed— for example, binding to a port number under 1024-privileges will be dropped and execution is continued as a non privileged user. This is a security measure.
6 Some error pages generated by httpd can include a link where users can report a problem. Setting this directive to a valid email address will make the webmaster easier to contact for users. Leaving this setting at the default of root@localhost is not recommended.
7 A <Directory> block sets configuration directives for the specified directory, and all descendent directories. Common directives inside a <Directory> block include the following:
● AllowOverrideNone:.htaccessfileswillnotbeconsultedforper-directoryconfigurationsettings.Setting this to any other setting will have a performance penalty, as well as the possible security ramifications.
● RequireAllDenied:httpdwillrefusetoservecontentoutofthisdirectory,returningaHTTP/1.1403 Forbidden error when requested by a client.
● RequireAllGranted:Allowaccesstothisdirectory.Settingthisonadirectoryoutsideofthenormal content tree can have security implications.
● Options[[+|-]OPTIONS]...:Turnon(oroff)certainoptionsforadirectory.Forexample,theIndexesoption will show a directory listing if a directory is requested and no index.html file exists in that directory.
8 This setting determines where httpd will search for requested files. It is important that the directory specified here is both readable by httpd (both regular permissions and SELinux), and that a corresponding <Directory> block has been declared to allow access.
/

9 This block only applies its contents if the specified extension module is loaded. In this case, the dir_module is loaded, so the DirectoryIndex directive can be used to specify what file should be used when a directory is requested.
10 A <Files> block works just as a <Directory> block, but here options for individual (wildcarded) files is used. In this case, the block prevents httpd from serving out any security-sensitive files like .htaccess and .htpasswd.
11 This specifies to what file httpd should log any errors it encounters. Since this is a relative pathname, it will be prepended with the ServerRoot directive. In a default configuration, /etc/httpd/logs is a symbolic link to /var/log/httpd/.
12 The CustomLog directive takes two parameters: a file to log to, and a log format defined with the LogFormat directive. Using these directives, administrators can log exactly the information they need or want. Most log parsing tools will assume that the default combined format is used.
13 This setting adds a charset part to the Content-Type header for text/plain and text/html resources. This can be disabled with AddDefaultCharset Off.
14 This works the same as a regular include, but if no files are found, no error is generated.
